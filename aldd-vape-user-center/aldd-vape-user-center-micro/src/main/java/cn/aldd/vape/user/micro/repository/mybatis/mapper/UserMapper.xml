<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.aldd.vape.user.micro.repository.mybatis.dao.UserDao">
	
	<select id="findNearUsers" resultType="cn.aldd.vape.user.micro.vo.UserVo" parameterType="java.lang.String">
		<![CDATA[
		SELECT  
    		record.id as id, 
			record.open_id as openId, 
			record.address as address,  
			record.longitude as longitude, 
			record.latitude as latitude, 
			record.age as age, 
			record.code as code, 
			record.gender as gender, 
			record.head_portrait_img as headPortraitImg, 
			record.hobby as hobby, 
			record.status as status, 
			record.login_name as loginName, 
			record.password as password, 
			record.nick_name as nickName, 
			record.ration as ration, 
			record.skill as skill, 
			record.create_time as createTime, 
			record.update_time as updateTime, 
    	ROUND( 
        	6378.138 * 2 * ASIN(
            SQRT(POW(SIN(((SELECT u1.latitude FROM user u1 WHERE u1.id =#{userId}) * PI()/180 - record.latitude * PI() / 180) / 2), 2) 
					+ COS((SELECT u2.latitude FROM user u2 WHERE u2.id =#{userId}) * PI() / 180) * COS(record.latitude * PI() / 180) * POW(  
                    SIN(((SELECT u3.longitude FROM user u3 WHERE u3.id =#{userId}) * PI() / 180 - record.longitude * PI() / 180 ) / 2  ),2)) ) 
		    ) AS distance  
		FROM  
		user record
		where record.id != #{userId}
		ORDER BY distance ASC  
		]]>
	</select>
	
	<select id="login" resultType="cn.aldd.vape.user.micro.vo.UserVo" parameterType="java.lang.String">
		<include refid="selectAllColumns" />
		where record.login_name = #{loginName} and record.password = #{password}
	</select>
	
	<select id="findMyRanking" resultType="cn.aldd.vape.user.micro.vo.UserRankingVo">
		<![CDATA[
			SELECT ccc.* FROM ( 
			SELECT @rowno:=@rowno + 1 AS rowno,aaa.* FROM ( 
			SELECT  u.id as userId,u.nick_name AS nickName,u.head_portrait_img  AS headPortraitImg, 
			( SELECT SUM((SELECT SUM(dr.reward_num)FROM dynamic_reward dr WHERE dr.dynamic_id=d.id  
			and dr.create_time > #{start} AND dr.create_time< #{end} 
			GROUP BY dr.dynamic_id)) 
			FROM dynamic d WHERE d.create_user_id = u.id GROUP BY d.create_user_id )as rewardCount 
			FROM user u ORDER BY rewardCount DESC 
			) as aaa,(SELECT @rowno:=0) bbb 
			) ccc WHERE ccc.userId = #{userId}
		]]>
	</select>
	
	<select id="findUserRankingList" resultType="cn.aldd.vape.user.micro.vo.UserRankingVo">
		<![CDATA[
			SELECT @rowno:=@rowno + 1 AS rowno,aaa.* FROM ( 
			SELECT  u.id as userId,u.nick_name AS nickName,u.head_portrait_img  AS headPortraitImg, 
			( SELECT SUM((SELECT SUM(dr.reward_num)FROM dynamic_reward dr WHERE dr.dynamic_id=d.id  
			and dr.create_time > #{start} AND dr.create_time< #{end}
			GROUP BY dr.dynamic_id)) 
			FROM dynamic d WHERE d.create_user_id = u.id GROUP BY d.create_user_id )as rewardCount 
			FROM user u ORDER BY rewardCount DESC 
			) as aaa,(SELECT @rowno:=0) bbb
		]]>
	</select>
	
	<select id="findUserById" resultType="cn.aldd.vape.user.micro.vo.UserVo" parameterType="java.lang.String">
		<include refid="selectAllColumns" />
		where record.id = #{id} or record.open_id = #{id}
	</select>
	
	<select id="findUserList" resultType="cn.aldd.vape.user.micro.vo.UserVo" >
		<include refid="selectAllColumns"/>
		<include refid="where_fragement" />
	</select>
	
	<!-- 查询字段公共sql -->
	<sql id="selectAllColumns">
		<![CDATA[
		SELECT
			 id as id, 
			 open_id as openId, 
			 address as address,  
			 longitude as longitude, 
			 latitude as latitude, 
			 age as age, 
			 code as code, 
			 gender as gender, 
			 head_portrait_img as headPortraitImg, 
			 hobby as hobby, 
			 status as status, 
			 login_name as loginName, 
			 password as password, 
			 nick_name as nickName, 
			 ration as ration, 
			 skill as skill, 
			 create_time as createTime, 
			 update_time as updateTime 
			FROM user record
		]]>
	</sql>

	<sql id="where_fragement">
		where 1=1
		<if test="entity!=null">
				<if test = "entity.id != null and entity.id != ''">
					<![CDATA[ and record.id  = #{entity.id} ]]>
				</if>
				<if test = "entity.openId != null and entity.openId != ''">
					<![CDATA[ and record.open_id  = #{entity.openId} ]]>
				</if>
				<if test = "entity.address != null and entity.address != ''">
					<![CDATA[ and record.address  = #{entity.address} ]]>
				</if>
				<if test = "entity.age != null and entity.age != ''">
					<![CDATA[ and record.age  = #{entity.age} ]]>
				</if>
				<if test = "entity.code != null and entity.code != ''">
					<![CDATA[ and record.code  = #{entity.code} ]]>
				</if>
				<if test = "entity.gender != null and entity.gender != ''">
					<![CDATA[ and record.gender  = #{entity.gender} ]]>
				</if>
				<if test = "entity.headPortraitImg != null and entity.headPortraitImg != ''">
					<![CDATA[ and record.head_portrait_img  = #{entity.headPortraitImg} ]]>
				</if>
				<if test = "entity.hobby != null and entity.hobby != ''">
					<![CDATA[ and record.hobby  = #{entity.hobby} ]]>
				</if>
				<if test = "entity.status != null and entity.status != ''">
					<![CDATA[ and record.status  = #{entity.status} ]]>
				</if>
				<if test = "entity.loginName != null and entity.loginName != ''">
					<![CDATA[ and record.login_name  = #{entity.loginName} ]]>
				</if>
				<if test = "entity.password != null and entity.password != ''">
					<![CDATA[ and record.password  = #{entity.password} ]]>
				</if>
				<if test = "entity.nickName != null and entity.nickName != ''">
					<![CDATA[ and record.nick_name  = #{entity.nickName} ]]>
				</if>
				<if test = "entity.ration != null and entity.ration != ''">
					<![CDATA[ and record.ration  = #{entity.ration} ]]>
				</if>
				<if test = "entity.skill != null and entity.skill != ''">
					<![CDATA[ and record.skill  = #{entity.skill} ]]>
				</if>
				<if test = "entity.createTime != null and entity.createTime != ''">
					<![CDATA[ and record.create_time  = #{entity.createTime} ]]>
				</if>
				<if test = "entity.updateTime != null and entity.updateTime != ''">
					<![CDATA[ and record.update_time  = #{entity.updateTime} ]]>
				</if>
		</if>
	</sql>

</mapper>